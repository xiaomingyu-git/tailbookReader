# Book Reader - Flutter 小说阅读应用

## 项目概述
这是一个跨平台的小说阅读应用，使用Flutter开发，支持macOS、Android、Windows等平台。应用主要功能包括书籍管理、阅读界面、同步功能等。

## 技术栈
- **框架**: Flutter 3.35.3
- **语言**: Dart (SDK >=3.0.0 <4.0.0)
- **UI**: Material Design 3
- **状态管理**: StatefulWidget
- **数据存储**: SharedPreferences + 文件系统
- **文件处理**: file_picker, path_provider, archive
- **字符编码**: flutter_charset_detector
- **网络通信**: http, webdav_client
- **路径处理**: path

## 项目结构
```
lib/
├── main.dart                 # 应用入口，主题配置
├── models/
│   └── book.dart            # 书籍数据模型
├── pages/
│   ├── home_page.dart       # 主页
│   ├── bookshelf_page.dart  # 书架页面（主要功能页面）
│   ├── reading_page.dart    # 阅读页面
│   ├── settings_page.dart   # 设置页面
│   ├── storage_setup_page.dart # 存储设置页面
│   ├── storage_management_page.dart # 存储管理页面
│   └── permission_guide_page.dart # 权限引导页面
├── services/
│   ├── book_service.dart    # 书籍管理服务
│   └── storage_service.dart # 存储管理服务
├── utils/                   # 工具类（空目录）
└── widgets/                 # 自定义组件（空目录）
```

## 核心功能

### 1. 书籍管理
- **导入书籍**: 支持导入.txt格式的小说文件
- **智能去重**: 基于书籍标题hash值避免重复导入
- **文件同步**: 书籍信息同步到book.sync文件
- **搜索功能**: 支持按书名和作者搜索
- **书籍删除**: 支持删除不需要的书籍

### 2. 存储系统
- **同步文件夹**: 用户可自定义存储路径
- **book.sync文件**: 存储书籍元数据的JSON文件
- **books文件夹**: 存储实际的书籍文件
- **文件保持**: 保持原始文件名，不添加时间戳前缀
- **备份恢复**: 支持本地和WebDAV备份恢复
- **WebDAV同步**: 云端存储和同步功能

### 3. 阅读功能
- **阅读界面**: 支持小说阅读
- **阅读进度**: 记录阅读位置和章节
- **阅读历史**: 记录最后阅读时间

## 关键实现细节

### 书籍ID生成
- 使用书籍标题的hash值作为唯一ID
- 确保同名书籍有相同的ID，避免重复导入
- 支持时间戳前缀的智能去除

### 导入逻辑优化
1. **预加载缓存**: 避免重复查询数据库
2. **三层检查**: book.sync → book文件夹 → 复制文件
3. **本地缓存**: 实时更新避免同一会话重复导入
4. **智能标题提取**: 自动去除时间戳前缀

### 数据同步
- **book.sync格式**: JSON格式，包含版本信息和书籍列表
- **实时同步**: 每次操作都同步到文件
- **刷新功能**: 从同步文件重新读取数据

## 当前状态

### 已完成功能
✅ 基础应用框架和主题配置
✅ 书籍数据模型和JSON序列化
✅ 存储路径管理和验证
✅ 书籍导入和去重逻辑
✅ 书架页面UI和交互 (列表布局)
✅ 搜索功能
✅ 同步文件支持
✅ 阅读页面基础结构
✅ 设置页面和权限管理
✅ 存储管理功能
✅ 备份恢复功能
✅ WebDAV集成
✅ 物理文件删除

### 技术特点
- **Material Design 3**: 现代化的UI设计
- **列表布局**: 书架页面采用列表格式，信息密度更高
- **深色/浅色主题**: 支持系统主题切换
- **错误处理**: 完善的异常处理和用户提示
- **性能优化**: 缓存机制减少重复操作
- **云端同步**: WebDAV支持远程备份和同步
- **数据一致性**: 物理文件删除确保数据完整性

### 数据示例
当前book.sync文件包含1本书籍：
- 标题: "[更51]《催眠术之蛇涎玉》作家：大野狼（np）"
- ID: "1032582703" (基于标题hash值)
- 文件路径: "/Volumes/Macintosh HD/Users/xiaomingyu/Downloads/book/books/1686517553173_[更51]《催眠术之蛇涎玉》作家：大野狼（np）.txt"

## 开发注意事项

### 代码规范
- 使用Dart官方代码规范
- 遵循Flutter最佳实践
- 保持代码简洁和可读性

### 文件操作
- 所有文件操作都需要权限检查
- 使用异步操作处理文件I/O
- 提供详细的错误信息和用户反馈

### 数据一致性
- 确保book.sync和实际文件的一致性
- 使用事务性操作避免数据损坏
- 定期验证文件完整性

### 性能考虑
- 使用缓存减少重复查询
- 避免在UI线程进行重操作
- 合理使用内存和存储空间

## 待优化功能
- 阅读页面的完整实现 (文本渲染、章节导航)
- 书籍封面支持
- 阅读设置和个性化配置
- 更多文件格式支持
- 阅读统计和分析
- 移动端优化

## 运行环境
- **开发环境**: macOS 15.6.1
- **Flutter版本**: 3.35.3 (stable)
- **Dart版本**: 3.9.2
- **目标平台**: macOS (主要), Android, Windows
- **存储路径**: /Users/xiaomingyu/Downloads/book/

## 最近更新
- 优化了导入逻辑，避免重复导入
- 改进了UI布局 (网格→列表)，提升用户体验
- 完善了同步文件功能
- 实现了存储管理功能
- 添加了备份恢复和WebDAV支持
- 优化了删除功能，确保数据一致性
- 简化了设置页面，分离存储管理
- 修复了多个bug和性能问题
